apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "consul-esm.fullname" . }}
  labels:
{{ include "consul-esm.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "consul-esm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "consul-esm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "consul-esm.fullname" . }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- end }}
    {{- if (or .Values.initContainerSetSysCtl (and .Values.config.tls.enabled .Values.config.tls.autoEncrypt.enabled)) }}
      initContainers:
        {{- if .Values.initContainerSetSysCtl }}
        - name: init-sysctl
          image: busybox
          command:
            - sysctl
            - -w
            - net.ipv4.ping_group_range=0 65535
          securityContext:
            privileged: true
        {{- end }}
        {{- if (and .Values.config.tls.enabled .Values.config.tls.autoEncrypt.enabled) }}
        - name: get-auto-encrypt-client-ca
          image: {{ .Values.config.tls.autoEncrypt.consulK8sImage }}
          command:
            - "/bin/sh"
            - "-ec"
            - |
              consul-k8s-control-plane get-consul-client-ca \
                -output-file=/output/connect.pem \
                {{- if .Values.config.tls.cacert }}
                -ca-file=/config/server.pem \
                {{- end }}
                {{- if .Values.config.tls.serverName }}
                -tls-server-name={{ .Values.config.tls.serverName }} \
                {{- end }}
                -server-addr={{ .Values.config.tls.autoEncrypt.server.address }} \
                -server-port={{ .Values.config.tls.autoEncrypt.server.port }}
          volumeMounts:
            - name: output
              mountPath: /output
            - name: config
              mountPath: /config
              readOnly: true
          resources:
            requests:
              memory: "25Mi"
              cpu: "50m"
            limits:
              memory: "25Mi"
              cpu: "50m"
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/consul-esm
            - -config-file=/config/config.hcl
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if (or .Values.env .Values.config.useNodeAgent.enabled) }}
          env:
            {{- if .Values.config.useNodeAgent.enabled }}
            - name: "HOST_IP"
              valueFrom:
                fieldRef:
                  fieldPath: "status.hostIP"
            - name: CONSUL_HTTP_ADDR
              value: "{{ if .Values.config.tls.enabled }}https://{{ end }}$(HOST_IP):{{ .Values.config.useNodeAgent.port }}"
            {{- end }}
            {{- if  .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: output
              mountPath: /output
              readOnly: true
        {{- if .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        {{- end }}
        {{- if (and .Values.config.tls.enabled .Values.config.tls.autoEncrypt.enabled) }}
        - name: consul-template
          image: {{.Values.config.tls.autoEncrypt.consulTemplateImage }}
          resources:
            requests:
              memory: "25Mi"
              cpu: "50m"
            limits:
              memory: "25Mi"
              cpu: "50m"
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: output
              mountPath: /output
          env:
            - name: "HOST_IP"
              valueFrom:
                fieldRef:
                  fieldPath: "status.hostIP"
          command:
            - "/bin/consul-template"
          args:
            {{- if .Values.config.useNodeAgent.enabled }}
            - "-consul-addr=$(HOST_IP):{{ .Values.config.useNodeAgent.port }}"
            {{- end }}
            - "-config=/config/consul_template.hcl"
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "consul-esm.fullname" . }}
        - name: output
          emptyDir:
            medium: "Memory"
