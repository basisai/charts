apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "consul-esm.fullname" . }}
  labels:
{{ include "consul-esm.labels" . | indent 4 }}
data:
  config.hcl: |
    # The log level to use.
    log_level = "{{ .Values.config.logLevel }}"

    # The service name for this agent to use when registering itself with Consul.
    consul_service = "{{ .Values.config.serviceName }}"

    # The service tag for this agent to use when registering itself with Consul.
    # ESM instances that share a service name/tag combination will have the work
    # of running health checks and pings for any external nodes in the catalog
    # divided evenly amongst themselves.
    consul_service_tag = "{{ .Values.config.serviceTag }}"

    # The directory in the Consul KV store to use for storing runtime data.
    consul_kv_path = "{{ .Values.config.kvPath }}"

    # The node metadata values used for the ESM to qualify a node in the catalog
    # as an "external node".
    external_node_meta {
      {{- range $key, $value := .Values.config.externalNodeMeta }}
        {{ $key }} = "{{ $value }}"
      {{- end }}
    }

    # The length of time to wait before reaping an external node due to failed
    # pings.
    node_reconnect_timeout = "{{ .Values.config.nodeReconnectTimeout }}"

    # The interval to ping and update coordinates for external nodes that have
    # 'external-probe' set to true. By default, ESM will attempt to ping and
    # update the coordinates for all nodes it is watching every 10 seconds.
    node_probe_interval = "{{ .Values.config.nodeProbeInterval }}"

    {{- if .Values.config.httpAddr }}
    # The address of the local Consul agent. Can also be provided through the
    # CONSUL_HTTP_ADDR environment variable.
    http_addr = "{{ .Values.config.httpAddr }}"
    {{- end }}

    # The ACL token to use when communicating with the local Consul agent. Can
    # also be provided through the CONSUL_HTTP_TOKEN environment variable.
    token = ""

    # The Consul datacenter to use.
    datacenter = ""

    {{- if .Values.config.tls.enabled }}
    # The CA file to use for talking to Consul over TLS. Can also be provided
    # though the CONSUL_CACERT environment variable.
    {{- if .Values.config.tls.autoEncrypt.enabled }}
    ca_file = "/output/connect.pem"
    {{- else if .Values.config.tls.cacert }}
    ca_file = "/config/server.pem"
    {{- end }}

    {{- if (and (not .Values.config.tls.autoEncrypt.enabled) .Values.config.tls.serverName ) }}
    # The server name to use as the SNI host when connecting to Consul via TLS.
    # Can also be provided through the CONSUL_TLS_SERVER_NAME environment
    # variable.
    tls_server_name = "{{ .Values.config.tls.serverName }}"
    {{- end }}
    {{- end }}

    # The method to use for pinging external nodes. Defaults to "udp" but can
    # also be set to "socket" to use ICMP (which requires root privileges).
    ping_type = "{{ .Values.config.pingType }}"

  {{- if .Values.config.tls.cacert }}
  server.pem: {{ .Values.config.tls.cacert | quote}}
  {{- end }}

  {{- if (and .Values.config.tls.enabled .Values.config.tls.autoEncrypt.enabled) }}
  consul_template.hcl: |
    log_level = "debug"
    kill_signal = "SIGTERM"

    consul {
      {{- if .Values.config.httpAddr }}
      address = "{{ .Values.config.httpAddr }}"
      {{- end }}

      ssl {
        enabled = true
        ca_cert = "/output/connect.pem"
      }
    }
    # Re-render CA Root
    template {
      destination = "/output/connect.pem"
      left_delimiter = "<<"
      right_delimiter = ">>"
      contents = "<< range caRoots >><< .RootCertPEM >><< end >>"
    }
  {{- end }}
